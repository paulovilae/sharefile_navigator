services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        USE_PIP_CACHE: "true"
    volumes:
      - ./backend:/app
      - ./ocr.db:/app/ocr.db
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      # Database configuration - set to sqlite by default
      - DATABASE_URL=${DATABASE_URL:-sqlite:///ocr.db}
      - DB_TYPE=${DB_TYPE:-sqlite}
    depends_on:
      - postgres
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://backend:8000
    depends_on:
      - backend

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=ocr_user
      - POSTGRES_PASSWORD=ocr_password
      - POSTGRES_DB=ocr_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocr_user -d ocr_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=OcrPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "OcrPassword123!" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  node_modules:
  postgres_data:
  mssql_data:
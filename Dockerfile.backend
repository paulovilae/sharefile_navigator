# Use NVIDIA CUDA base image with Python
FROM nvidia/cuda:12.1.0-runtime-ubuntu22.04

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV PIP_NO_CACHE_DIR=0
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Set working directory
WORKDIR /app

# Install system dependencies - keep in a single layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    libpq-dev \
    tesseract-ocr \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgl1-mesa-glx \
    poppler-utils \
    unixodbc-dev \
    postgresql-client \
    curl \
    gnupg \
    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get update \
    && ACCEPT_EULA=Y apt-get install -y --no-install-recommends \
    msodbcsql17 \
    mssql-tools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && pip3 install --upgrade pip

# Add SQL Server tools to PATH
ENV PATH="$PATH:/opt/mssql-tools/bin"

# Copy requirements file
COPY backend/requirements.txt .

# Split dependencies into multiple layers for better caching

# 1. Install common small dependencies first (these change frequently)
RUN grep -v -E "torch|nvidia|cuda|easyocr|opencv|transformers|pdf2image|pytesseract" requirements.txt > common_requirements.txt && \
    pip3 install -r common_requirements.txt && \
    rm common_requirements.txt

# 2. Install medium-sized dependencies (these change occasionally)
RUN grep -E "opencv|pdf2image|pytesseract" requirements.txt > medium_requirements.txt || echo "# No medium requirements found" && \
    pip3 install -r medium_requirements.txt && \
    rm medium_requirements.txt

# 3. Install large ML dependencies (these rarely change)
RUN grep -E "transformers|easyocr" requirements.txt > ml_requirements.txt || echo "# No ML requirements found" && \
    pip3 install -r ml_requirements.txt && \
    rm ml_requirements.txt

# 4. Install PyTorch and CUDA dependencies last (these rarely change)
RUN grep -E "torch|nvidia|cuda" requirements.txt > pytorch_requirements.txt || echo "# No PyTorch requirements found" && \
    pip3 install -r pytorch_requirements.txt --extra-index-url https://download.pytorch.org/whl/cu121 && \
    rm pytorch_requirements.txt requirements.txt

# Copy the backend code - keep this as the last step before CMD
COPY backend/ .

# Expose the port the app runs on
EXPOSE 8000

# Command to run the application
CMD ["python3", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - ocr_data:/app/data
      - ./ocr.db:/app/ocr.db
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      # Database configuration - can be overridden with .env file
      - DATABASE_URL=${DATABASE_URL:-sqlite:///ocr.db}
      - DB_TYPE=${DB_TYPE:-sqlite}
    restart: unless-stopped
    depends_on:
      - postgres
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ocr_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ocr_password}
      - POSTGRES_DB=${POSTGRES_DB:-ocr_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ocr_user} -d ${POSTGRES_DB:-ocr_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_PASSWORD:-OcrPassword123!}
      - MSSQL_PID=${MSSQL_PID:-Express}
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${MSSQL_PASSWORD:-OcrPassword123!}" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ocr_data:
  postgres_data:
  mssql_data: